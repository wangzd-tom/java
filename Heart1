import java.io.InputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class ServerH {
    public static void main(String[] args) {
        System.out.println("开始检测客户端是否在线...");
        new ServerHeart().start();
    }
}

class ServerHeart extends Thread {
    private ServerSocket server = null;

    @Override
    public void run() {
        try {
            server = new ServerSocket(9999);

            while (true) {
                Socket client = server.accept();
                new Thread(new Client(client)).start();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    class Client implements Runnable {
        Socket client;

        public Client(Socket client) {
            this.client = client;
        }

        @Override
        public void run() {
            try {
                while (true) {
                    InputStream in = client.getInputStream();
                    int readword = 0;
                    byte[] a = new byte[8];
                    while ((readword = in.read(a)) != -1) {
                        System.out.print(new String(a, 0, readword));
                        System.out.println("ke hu duan hai zai");
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

public class ClientH {
    public static void main(String[] args) {
        ClientHeart client = new ClientHear();
        client.start();
    }
}
class ClientHeart extends Thread{
    @Override
    public void run() {
        Timer timer = new Timer();
        Date date = new Date();
        timer.schedule(new a(),date,1000*2);
    }
}
class a extends TimerTask{
    Socket sender = null;
    @Override
    public void run() {
        try {
            sender = new Socket(InetAddress.getLocalHost(), 9999);
            while (true) {
                OutputStream out = sender.getOutputStream();
                String s = "11111111";
                byte[] a = s.getBytes();
                out.write(a);
                out.flush();
                System.out.println("已发送...");
                Thread.sleep(5000);
            }
        } catch (Exception e) {

        }
    }
}
